% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shinyModules.R
\name{plot_tsne}
\alias{plot_tsne}
\title{scClustViz plot: Plot cell embedding in 2D}
\usage{
plot_tsne(cell_coord, md, md_title, md_log = F, label = NULL,
  sel_cells, sel_cells_A, sel_cells_B)
}
\arguments{
\item{cell_coord}{A numeric matrix where named rows are cells, and two
columns are the x and y dimensions of the cell embedding.}

\item{md}{The overlay information. Either a factor or numeric vector matching
the rows (cells) of the \code{cell_coord} matrix. If this is a factor, the
cells will be coloured by the factor levels. If a positive numeric vector,
the cells will be coloured using the Viridis sequential colourscale
implemented in \code{\link[colorspace]{sequential_hcl}}. Otherwise a
diverging red-blue colourscale from \code{\link[colorspace]{diverging_hcl}}
will be used.}

\item{md_title}{NULL or a character vector of one. If NULL, \code{md} is
assumed to be cluster assignments. Otherwise this should be the title of
the overlay represented by \code{md}.}

\item{md_log}{Default=FALSE. Logical vector of length one indicating whether
\code{md} should be log-transformed. Only to be used when \code{md} is
numeric.}

\item{label}{Default=NULL. The output of \code{\link{tsne_labels}} to have
cluster names overlaid on the plot.}

\item{sel_cells}{Optional. A character vector of cell names (rownames of
\code{cell_coord}) to highlight in the plot.}

\item{sel_cells_A}{Optional. Alternative highlighting method to sel_cells,
can be used in conjunction. Meant for indicating a selected set of cells
when building manual cell set comparisons, in conjunction with
\code{sel_cells_B}.}

\item{sel_cells_B}{Optional. See \code{sel_cells_A}.}
}
\description{
This function plots cells in two dimensions, with various overlays.
}
\examples{
\dontrun{
# Cluster overlay:
plot_tsne(cell_coord=getEmb(input_data_obj,"tsne"),
          md=Clusters(sCVdata),
          md_title=NULL,
          label=tsne_labels(sCVd=sCVdata,
                            cell_coord=getEmb(input_data_obj,"tsne"),
                            lab_type="ClusterNames"))

# Metadata overlay:
plot_tsne(cell_coord=getEmb(input_data_obj,"tsne"),
          md=getMD(input_data_obj)$total_counts,
          md_title="Library Size",
          md_log=TRUE,
          label=tsne_labels(sCVd=sCVdata,
                            cell_coord=getEmb(input_data_obj,"tsne"),
                            lab_type="ClusterNames"))

# Gene expression overlay:
plot_tsne(cell_coord=getEmb(input_data_obj,"tsne"),
          md=getExpr(input_data_obj,Param(sCVdata,"assayType"))["Actb",],
          md_title="Actb")
}

}
