% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runViz.R
\name{runShiny}
\alias{runShiny}
\title{Run the scClustViz Shiny app}
\usage{
runShiny(
  filePath,
  outPath,
  cellMarkers = list(),
  annotationDB,
  rownameKeytype,
  imageFileType = "png",
  ...
)
}
\arguments{
\item{filePath}{A character vector giving the relative filepath to an RData
file containing two objects: the \code{\link{sCVdata}} object generated by
\code{\link{CalcAllSCV}}, and the input scRNAseq data object.}

\item{outPath}{Optional. If you'd like to save/load any analysis files
to/from a different directory than the input directory (for example, if
you're using data from a package), specify that directory here. Otherwise
any files generated by the Shiny app (ie. saving the selected cluster
solution, saving custom set DE testing results) will be saved/loaded in
\code{filePath}. If you'd like to prevent users from saving anything to
disk (ie when hosting a web service) set this to NA.}

\item{cellMarkers}{Optional. If you have canonical marker genes for expected
cell types, list them here (see example code below). Note that the gene
names must match rownames of your data (ie. use ensembl IDs if your gene
expression matrix rownames are ensembl IDs). The Shiny app will attempt to
label clusters in the tSNE projection by highest median gene expression.
See \code{\link{labelCellTypes}} for more information.}

\item{annotationDB}{Optional. An AnnotationDbi object for your data's species
(ie. \code{\link[org.Mm.eg.db]{org.Mm.eg.db}} /
\code{\link[org.Hs.eg.db]{org.Hs.eg.db}} for mouse / human respectively).
If present, gene names will be shown in gene-specific figures, official
gene symbols (instead of your rownames) will be displayed in figures, and
gene searches performed using both official gene symbols and your rownames.
If the gene IDs in your data aren't official gene symbols, using this
argument will make the visualization tool much more useful.}

\item{rownameKeytype}{Optional. A character vector indicating the
AnnotationDbi keytype (see
\code{\link[AnnotationDbi]{keytypes}(annotationDB)}) that represents your
rownames. If the annotationDB argument is present and this is missing, the
function will assume the rownames are official gene symbols. If less than
80% of rownames map to official gene symbols, the function will try to
predict the appropriate keytype of the rownames (this takes a bit of time).}

\item{imageFileType}{Default="pdf". The file format for saved figures. One of
\code{"pdf"} (generated with \code{\link[grDevices]{cairo_pdf}}),
\code{"eps"} (generated with \code{\link[grDevices]{cairo_ps}}),
\code{"tiff"} (generated with \code{\link[grDevices]{tiff}}), or
\code{"png"} (generated with \code{\link[grDevices]{png}}).}

\item{...}{Named options that should be passed to the
\code{\link[shiny]{runApp}} call (these can be any of the following:
"port", "launch.browser", "host", "quiet", "display.mode" and "test.mode").}
}
\value{
The function causes the scClustViz Shiny GUI app to open in a
  seperate window.
}
\description{
This command runs the Shiny interactive visualization from a saved data file.
}
\examples{
\dontrun{
your_cluster_columns <- grepl("res[.0-9]+$",
                              names(getMD(your_scRNAseq_data_object)))
# ^ Finds the cluster columns of the metadata in a Seurat object.

your_cluster_results <- getMD(your_scRNAseq_data_object)[,your_cluster_columns]

sCVdata_list <- CalcAllSCV(inD=your_scRNAseq_data_object,
                           clusterDF=your_cluster_results,
                           exponent=exp(1),
                           pseudocount=1,
                           DRthresh=0.1,
                           DRforClust="pca",
                           testAll=F,
                           FDRthresh=0.05,
                           calcSil=T,
                           calcDEvsRest=T,
                           calcDEcombn=T)

save(your_scRNAseq_data_object,sCVdata_list,
     file="for_scClustViz.RData")

# Lets assume this is data from an embryonic mouse cerebral cortex:
# (This is the function call wrapped by MouseCortex::viewMouseCortex("e13"))
runShiny(filePath="for_scClustViz.RData",
         outPath="./",
         # Save any further analysis performed in the app to the
         # working directory rather than library directory.
         annotationDB="org.Mm.eg.db",
         # This is an optional argument, but will add annotations.
         cellMarkers=list("Cortical precursors"=c("Mki67","Sox2","Pax6",
                                                  "Pcna","Nes","Cux1","Cux2"),
                          "Interneurons"=c("Gad1","Gad2","Npy","Sst","Lhx6",
                                           "Tubb3","Rbfox3","Dcx"),
                          "Cajal-Retzius neurons"="Reln",
                          "Intermediate progenitors"="Eomes",
                          "Projection neurons"=c("Tbr1","Satb2","Fezf2",
                                                 "Bcl11b","Tle4","Nes",
                                                 "Cux1","Cux2","Tubb3",
                                                 "Rbfox3","Dcx")
                          )
         # This is a list of canonical marker genes per expected cell type.
         # The app uses this list to automatically annotate clusters.
         )

}

}
\seealso{
\code{\link{sCVdata}} for the input data type, and
  \code{\link{CalcAllSCV}} or \code{\link{CalcSCV}} to do the calculations
  necessary for this function.
}
